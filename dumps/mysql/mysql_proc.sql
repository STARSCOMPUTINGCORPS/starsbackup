CREATE DATABASE  IF NOT EXISTS `mysql` /*!40100 DEFAULT CHARACTER SET latin1 */;
USE `mysql`;
-- MySQL dump 10.13  Distrib 5.5.41, for debian-linux-gnu (x86_64)
--
-- Host: sc-mysql-1.cuwqsdf6sh6w.us-east-1.rds.amazonaws.com    Database: mysql
-- ------------------------------------------------------
-- Server version	5.5.40-log

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `proc`
--

DROP TABLE IF EXISTS `proc`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `proc` (
  `db` char(64) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '',
  `name` char(64) NOT NULL DEFAULT '',
  `type` enum('FUNCTION','PROCEDURE') NOT NULL,
  `specific_name` char(64) NOT NULL DEFAULT '',
  `language` enum('SQL') NOT NULL DEFAULT 'SQL',
  `sql_data_access` enum('CONTAINS_SQL','NO_SQL','READS_SQL_DATA','MODIFIES_SQL_DATA') NOT NULL DEFAULT 'CONTAINS_SQL',
  `is_deterministic` enum('YES','NO') NOT NULL DEFAULT 'NO',
  `security_type` enum('INVOKER','DEFINER') NOT NULL DEFAULT 'DEFINER',
  `param_list` blob NOT NULL,
  `returns` longblob NOT NULL,
  `body` longblob NOT NULL,
  `definer` char(77) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '',
  `created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `modified` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',
  `sql_mode` set('REAL_AS_FLOAT','PIPES_AS_CONCAT','ANSI_QUOTES','IGNORE_SPACE','NOT_USED','ONLY_FULL_GROUP_BY','NO_UNSIGNED_SUBTRACTION','NO_DIR_IN_CREATE','POSTGRESQL','ORACLE','MSSQL','DB2','MAXDB','NO_KEY_OPTIONS','NO_TABLE_OPTIONS','NO_FIELD_OPTIONS','MYSQL323','MYSQL40','ANSI','NO_AUTO_VALUE_ON_ZERO','NO_BACKSLASH_ESCAPES','STRICT_TRANS_TABLES','STRICT_ALL_TABLES','NO_ZERO_IN_DATE','NO_ZERO_DATE','INVALID_DATES','ERROR_FOR_DIVISION_BY_ZERO','TRADITIONAL','NO_AUTO_CREATE_USER','HIGH_NOT_PRECEDENCE','NO_ENGINE_SUBSTITUTION','PAD_CHAR_TO_FULL_LENGTH') NOT NULL DEFAULT '',
  `comment` text CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `character_set_client` char(32) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `collation_connection` char(32) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `db_collation` char(32) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `body_utf8` longblob,
  PRIMARY KEY (`db`,`name`,`type`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='Stored Procedures';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `proc`
--

LOCK TABLES `proc` WRITE;
/*!40000 ALTER TABLE `proc` DISABLE KEYS */;
INSERT INTO `proc` VALUES ('mysql','rds_rotate_global_status_history','PROCEDURE','rds_rotate_global_status_history','SQL','CONTAINS_SQL','NO','DEFINER','','','BEGIN\n     DECLARE sql_logging BOOLEAN;\n     select @@sql_log_bin into sql_logging;\n     set @@sql_log_bin=off;\n     drop table mysql.rds_global_status_history_old;\n     rename table mysql.rds_global_status_history to mysql.rds_global_status_history_old;\n     create table mysql.rds_global_status_history like mysql.rds_global_status_history_old;\n     set @@sql_log_bin=sql_logging;\nEND','rdsadmin@localhost','2014-10-24 09:04:11','2014-10-24 09:04:11','','','latin1','latin1_swedish_ci','latin1_swedish_ci','BEGIN\n     DECLARE sql_logging BOOLEAN;\n     select @@sql_log_bin into sql_logging;\n     set @@sql_log_bin=off;\n     drop table mysql.rds_global_status_history_old;\n     rename table mysql.rds_global_status_history to mysql.rds_global_status_history_old;\n     create table mysql.rds_global_status_history like mysql.rds_global_status_history_old;\n     set @@sql_log_bin=sql_logging;\nEND'),('mysql','rds_set_gsh_rotation','PROCEDURE','rds_set_gsh_rotation','SQL','CONTAINS_SQL','NO','DEFINER','IN p_period int','','begin\n   declare v_es varchar(3);\n   DECLARE sql_logging BOOLEAN;\n   select @@sql_log_bin into sql_logging;\n   set @@sql_log_bin=off;\n   select variable_value into v_es from information_schema.global_variables where variable_name = \'EVENT_SCHEDULER\';\n   if v_es = \'ON\' then\n   	   alter event ev_rds_gsh_table_rotation ON SCHEDULE EVERY p_period DAY STARTS CURRENT_TIMESTAMP + interval p_period day ENABLE;\n   	   select concat(\'Table Rotation Enabled every \', p_period ,\' Days, Scheduler is Active\') as `Success`;\n   else\n   	   select \'Scheduler is NOT Active\' as `Failure`\n   	    union all\n   	   select \'Please change the parameter event_scheduler=ON in your Parameter Group\' as `Status`;\n   end if;\n   set @@sql_log_bin=sql_logging;\n end','rdsadmin@localhost','2014-10-24 09:04:11','2014-10-24 09:04:11','','','latin1','latin1_swedish_ci','latin1_swedish_ci','begin\n   declare v_es varchar(3);\n   DECLARE sql_logging BOOLEAN;\n   select @@sql_log_bin into sql_logging;\n   set @@sql_log_bin=off;\n   select variable_value into v_es from information_schema.global_variables where variable_name = \'EVENT_SCHEDULER\';\n   if v_es = \'ON\' then\n   	   alter event ev_rds_gsh_table_rotation ON SCHEDULE EVERY p_period DAY STARTS CURRENT_TIMESTAMP + interval p_period day ENABLE;\n   	   select concat(\'Table Rotation Enabled every \', p_period ,\' Days, Scheduler is Active\') as `Success`;\n   else\n   	   select \'Scheduler is NOT Active\' as `Failure`\n   	    union all\n   	   select \'Please change the parameter event_scheduler=ON in your Parameter Group\' as `Status`;\n   end if;\n   set @@sql_log_bin=sql_logging;\n end'),('mysql','rds_enable_gsh_rotation','PROCEDURE','rds_enable_gsh_rotation','SQL','CONTAINS_SQL','NO','DEFINER','','','begin\n   call rds_set_gsh_rotation(7);	   \n end','rdsadmin@localhost','2014-10-24 09:04:11','2014-10-24 09:04:11','','','latin1','latin1_swedish_ci','latin1_swedish_ci','begin\n   call rds_set_gsh_rotation(7);	   \n end'),('mysql','rds_disable_gsh_rotation','PROCEDURE','rds_disable_gsh_rotation','SQL','CONTAINS_SQL','NO','DEFINER','','','begin\n  DECLARE sql_logging BOOLEAN;\n  select @@sql_log_bin into sql_logging;\n  set @@sql_log_bin=off;\n  alter event ev_rds_gsh_table_rotation DISABLE;\n  select \'Table Rotation Disabled\' as `Success`;\n  set @@sql_log_bin=sql_logging;\n end','rdsadmin@localhost','2014-10-24 09:04:11','2014-10-24 09:04:11','','','latin1','latin1_swedish_ci','latin1_swedish_ci','begin\n  DECLARE sql_logging BOOLEAN;\n  select @@sql_log_bin into sql_logging;\n  set @@sql_log_bin=off;\n  alter event ev_rds_gsh_table_rotation DISABLE;\n  select \'Table Rotation Disabled\' as `Success`;\n  set @@sql_log_bin=sql_logging;\n end'),('mysql','rds_kill','PROCEDURE','rds_kill','SQL','READS_SQL_DATA','YES','DEFINER','IN thread BIGINT','','BEGIN\n  DECLARE l_user varchar(16);\n  DECLARE l_host varchar(64);\n  DECLARE foo varchar(255);\n\n  SELECT user, host INTO l_user, l_host\n  FROM information_schema.processlist\n  WHERE id = thread;\n\n  IF l_user = \"rdsadmin\" and l_host like \"localhost%\" THEN\n    select `ERROR (RDS): CANNOT KILL RDSADMIN SESSION` into foo;\n  ELSEIF l_user = \"rdsrepladmin\" THEN\n    select `ERROR (RDS): CANNOT KILL RDSREPLADMIN SESSION` into foo;\n  ELSE\n    KILL thread;\n  END IF;\nEND','rdsadmin@localhost','2014-10-24 09:04:08','2014-10-24 09:04:08','','','latin1','latin1_swedish_ci','latin1_swedish_ci','BEGIN\n  DECLARE l_user varchar(16);\n  DECLARE l_host varchar(64);\n  DECLARE foo varchar(255);\n\n  SELECT user, host INTO l_user, l_host\n  FROM information_schema.processlist\n  WHERE id = thread;\n\n  IF l_user = \"rdsadmin\" and l_host like \"localhost%\" THEN\n    select `ERROR (RDS): CANNOT KILL RDSADMIN SESSION` into foo;\n  ELSEIF l_user = \"rdsrepladmin\" THEN\n    select `ERROR (RDS): CANNOT KILL RDSREPLADMIN SESSION` into foo;\n  ELSE\n    KILL thread;\n  END IF;\nEND'),('mysql','rds_kill_query','PROCEDURE','rds_kill_query','SQL','READS_SQL_DATA','YES','DEFINER','IN thread BIGINT','','BEGIN\n  DECLARE l_user varchar(16);\n  DECLARE l_host varchar(64);\n  DECLARE foo varchar(255);\n\n  SELECT user, host INTO l_user, l_host\n  FROM information_schema.processlist\n  WHERE id = thread;\n\n  IF l_user = \"rdsadmin\" and l_host like \"localhost%\" THEN\n    select `ERROR (RDS): CANNOT KILL RDSADMIN QUERY` into foo;\n  ELSEIF l_user = \"rdsrepladmin\" THEN\n    select `ERROR (RDS): CANNOT KILL RDSREPLADMIN QUERY` into foo;\n  ELSE\n    KILL QUERY thread;\n  END IF;\nEND','rdsadmin@localhost','2014-10-24 09:04:08','2014-10-24 09:04:08','','','latin1','latin1_swedish_ci','latin1_swedish_ci','BEGIN\n  DECLARE l_user varchar(16);\n  DECLARE l_host varchar(64);\n  DECLARE foo varchar(255);\n\n  SELECT user, host INTO l_user, l_host\n  FROM information_schema.processlist\n  WHERE id = thread;\n\n  IF l_user = \"rdsadmin\" and l_host like \"localhost%\" THEN\n    select `ERROR (RDS): CANNOT KILL RDSADMIN QUERY` into foo;\n  ELSEIF l_user = \"rdsrepladmin\" THEN\n    select `ERROR (RDS): CANNOT KILL RDSREPLADMIN QUERY` into foo;\n  ELSE\n    KILL QUERY thread;\n  END IF;\nEND'),('mysql','rds_rotate_general_log','PROCEDURE','rds_rotate_general_log','SQL','READS_SQL_DATA','YES','DEFINER','','','BEGIN\n  DECLARE sql_logging BOOLEAN;\n  select @@sql_log_bin into sql_logging;\n  set @@sql_log_bin=off;\n  CREATE TABLE IF NOT EXISTS mysql.general_log2 LIKE mysql.general_log;\n  DROP TABLE IF EXISTS mysql.general_log_backup;\n  RENAME TABLE mysql.general_log TO mysql.general_log_backup, mysql.general_log2 TO mysql.general_log;\n  set @@sql_log_bin=sql_logging;\nEND','rdsadmin@localhost','2014-10-24 09:04:08','2014-10-24 09:04:08','','','latin1','latin1_swedish_ci','latin1_swedish_ci','BEGIN\n  DECLARE sql_logging BOOLEAN;\n  select @@sql_log_bin into sql_logging;\n  set @@sql_log_bin=off;\n  CREATE TABLE IF NOT EXISTS mysql.general_log2 LIKE mysql.general_log;\n  DROP TABLE IF EXISTS mysql.general_log_backup;\n  RENAME TABLE mysql.general_log TO mysql.general_log_backup, mysql.general_log2 TO mysql.general_log;\n  set @@sql_log_bin=sql_logging;\nEND'),('mysql','rds_rotate_slow_log','PROCEDURE','rds_rotate_slow_log','SQL','READS_SQL_DATA','YES','DEFINER','','','BEGIN\n  DECLARE sql_logging BOOLEAN;\n  select @@sql_log_bin into sql_logging;\n  set @@sql_log_bin=off;\n  CREATE TABLE IF NOT EXISTS mysql.slow_log2 LIKE mysql.slow_log;\n  DROP TABLE IF EXISTS mysql.slow_log_backup;\n  RENAME TABLE mysql.slow_log TO mysql.slow_log_backup, mysql.slow_log2 TO mysql.slow_log;\n  set @@sql_log_bin=sql_logging;\nEND','rdsadmin@localhost','2014-10-24 09:04:08','2014-10-24 09:04:08','','','latin1','latin1_swedish_ci','latin1_swedish_ci','BEGIN\n  DECLARE sql_logging BOOLEAN;\n  select @@sql_log_bin into sql_logging;\n  set @@sql_log_bin=off;\n  CREATE TABLE IF NOT EXISTS mysql.slow_log2 LIKE mysql.slow_log;\n  DROP TABLE IF EXISTS mysql.slow_log_backup;\n  RENAME TABLE mysql.slow_log TO mysql.slow_log_backup, mysql.slow_log2 TO mysql.slow_log;\n  set @@sql_log_bin=sql_logging;\nEND'),('mysql','rds_skip_repl_error','PROCEDURE','rds_skip_repl_error','SQL','READS_SQL_DATA','YES','DEFINER','','','BEGIN\n  DECLARE v_threads_running int;\n  DECLARE v_sleep int;\n  DECLARE v_called_by_user VARCHAR(50);\n  DECLARE v_mysql_version VARCHAR(20);\n  DECLARE sql_logging BOOLEAN;\n  select @@sql_log_bin into sql_logging;\n  Select user() into v_called_by_user;\n  Select version() into v_mysql_version;\n  SELECT COUNT(1) into v_threads_running FROM information_schema.processlist WHERE user = \'system user\';\n  if v_threads_running = 1 \n  then\n    STOP SLAVE;\n    SET GLOBAL SQL_SLAVE_SKIP_COUNTER = 1;\n    START SLAVE;\n    Select \'Statement in error has been skipped\' as Message;\n    select sleep(2) into v_sleep;\n    SELECT COUNT(1) into v_threads_running FROM information_schema.processlist WHERE user = \'system user\';\n    if v_threads_running = 2 then\n      Select \'Slave is running normally\' as Message;\n          set @@sql_log_bin=off;\n      INSERT into mysql.rds_history(called_by_user, action, mysql_version) values (v_called_by_user,\'skip_repl_error:OK\',v_mysql_version);\n          commit;\n      set @@sql_log_bin=sql_logging;\n    else\n      Select \'Slave has encountered a new error. Please use SHOW SLAVE STATUS to see the error.\' as Message;\n          set @@sql_log_bin=off;\n      INSERT into mysql.rds_history(called_by_user, action, mysql_version) values (v_called_by_user,\'skip_repl_error:ERR\',v_mysql_version);\n          commit;\n      set @@sql_log_bin=sql_logging;\n    end if;\n  elseif v_threads_running = 2 \n  then\n     Select \'Slave is running normally.  No errors detected to skip.\' as Message;\n  elseif v_threads_running = 0 \n  then\n     Select \'Slave is down or disabled.\' as Message;\n  end if;\nEND','rdsadmin@localhost','2014-10-24 09:04:08','2014-10-24 09:04:08','','','latin1','latin1_swedish_ci','latin1_swedish_ci','BEGIN\n  DECLARE v_threads_running int;\n  DECLARE v_sleep int;\n  DECLARE v_called_by_user VARCHAR(50);\n  DECLARE v_mysql_version VARCHAR(20);\n  DECLARE sql_logging BOOLEAN;\n  select @@sql_log_bin into sql_logging;\n  Select user() into v_called_by_user;\n  Select version() into v_mysql_version;\n  SELECT COUNT(1) into v_threads_running FROM information_schema.processlist WHERE user = \'system user\';\n  if v_threads_running = 1 \n  then\n    STOP SLAVE;\n    SET GLOBAL SQL_SLAVE_SKIP_COUNTER = 1;\n    START SLAVE;\n    Select \'Statement in error has been skipped\' as Message;\n    select sleep(2) into v_sleep;\n    SELECT COUNT(1) into v_threads_running FROM information_schema.processlist WHERE user = \'system user\';\n    if v_threads_running = 2 then\n      Select \'Slave is running normally\' as Message;\n          set @@sql_log_bin=off;\n      INSERT into mysql.rds_history(called_by_user, action, mysql_version) values (v_called_by_user,\'skip_repl_error:OK\',v_mysql_version);\n          commit;\n      set @@sql_log_bin=sql_logging;\n    else\n      Select \'Slave has encountered a new error. Please use SHOW SLAVE STATUS to see the error.\' as Message;\n          set @@sql_log_bin=off;\n      INSERT into mysql.rds_history(called_by_user, action, mysql_version) values (v_called_by_user,\'skip_repl_error:ERR\',v_mysql_version);\n          commit;\n      set @@sql_log_bin=sql_logging;\n    end if;\n  elseif v_threads_running = 2 \n  then\n     Select \'Slave is running normally.  No errors detected to skip.\' as Message;\n  elseif v_threads_running = 0 \n  then\n     Select \'Slave is down or disabled.\' as Message;\n  end if;\nEND'),('mysql','rds_collect_global_status_history','PROCEDURE','rds_collect_global_status_history','SQL','CONTAINS_SQL','NO','DEFINER','','','begin\n\n  declare my_row_count int(5) default 0;\n  DECLARE sql_logging BOOLEAN;\n  select @@sql_log_bin into sql_logging;\n  set @@sql_log_bin=off;\n  set transaction isolation level read committed;\n  insert into rds_global_status_history ( collection_start, variable_name, variable_value, variable_delta )\n  select b.collection_end, a.variable_name, a.variable_value, a.variable_value-coalesce(b.variable_value,0) as variable_delta \n  from information_schema.global_status a \n  left outer join rds_global_status_history b on a.variable_name = b.variable_name \n  where b.collection_end = (select max(collection_end) from rds_global_status_history);\n  \n  select row_count() into my_row_count;\n  \n  if my_row_count = 0\n  then\n      insert into rds_global_status_history ( collection_start, variable_name, variable_value, variable_delta )\n      select null, variable_name, variable_value, variable_value from information_schema.global_status ;\n  end if;\n  commit;\n  set @@sql_log_bin=sql_logging;\nend','rdsadmin@localhost','2014-10-24 09:04:11','2014-10-24 09:04:11','','','latin1','latin1_swedish_ci','latin1_swedish_ci','begin\n\n  declare my_row_count int(5) default 0;\n  DECLARE sql_logging BOOLEAN;\n  select @@sql_log_bin into sql_logging;\n  set @@sql_log_bin=off;\n  set transaction isolation level read committed;\n  insert into rds_global_status_history ( collection_start, variable_name, variable_value, variable_delta )\n  select b.collection_end, a.variable_name, a.variable_value, a.variable_value-coalesce(b.variable_value,0) as variable_delta \n  from information_schema.global_status a \n  left outer join rds_global_status_history b on a.variable_name = b.variable_name \n  where b.collection_end = (select max(collection_end) from rds_global_status_history);\n  \n  select row_count() into my_row_count;\n  \n  if my_row_count = 0\n  then\n      insert into rds_global_status_history ( collection_start, variable_name, variable_value, variable_delta )\n      select null, variable_name, variable_value, variable_value from information_schema.global_status ;\n  end if;\n  commit;\n  set @@sql_log_bin=sql_logging;\nend'),('mysql','rds_set_gsh_collector','PROCEDURE','rds_set_gsh_collector','SQL','CONTAINS_SQL','NO','DEFINER','IN p_period int','','begin\n   declare v_es varchar(3);\n   DECLARE sql_logging BOOLEAN;\n   select @@sql_log_bin into sql_logging;\n   set @@sql_log_bin=off;\n   select variable_value into v_es from information_schema.global_variables where variable_name = \'EVENT_SCHEDULER\';\n   if v_es = \'ON\' then\n   	   alter event ev_rds_gsh_collector ON SCHEDULE EVERY p_period MINUTE STARTS CURRENT_TIMESTAMP ENABLE;\n   	   select concat(\'Collector Enabled every \', p_period ,\' Minutes, Scheduler is Active\') as `Success`;\n   else\n   	   select \'Scheduler is NOT Active\' as `Failure`\n   	    union all\n   	   select \'Please change the parameter event_scheduler=ON in your Parameter Group\' as `Status`;\n   end if;\n   set @@sql_log_bin=sql_logging;\n end','rdsadmin@localhost','2014-10-24 09:04:11','2014-10-24 09:04:11','','','latin1','latin1_swedish_ci','latin1_swedish_ci','begin\n   declare v_es varchar(3);\n   DECLARE sql_logging BOOLEAN;\n   select @@sql_log_bin into sql_logging;\n   set @@sql_log_bin=off;\n   select variable_value into v_es from information_schema.global_variables where variable_name = \'EVENT_SCHEDULER\';\n   if v_es = \'ON\' then\n   	   alter event ev_rds_gsh_collector ON SCHEDULE EVERY p_period MINUTE STARTS CURRENT_TIMESTAMP ENABLE;\n   	   select concat(\'Collector Enabled every \', p_period ,\' Minutes, Scheduler is Active\') as `Success`;\n   else\n   	   select \'Scheduler is NOT Active\' as `Failure`\n   	    union all\n   	   select \'Please change the parameter event_scheduler=ON in your Parameter Group\' as `Status`;\n   end if;\n   set @@sql_log_bin=sql_logging;\n end'),('mysql','rds_enable_gsh_collector','PROCEDURE','rds_enable_gsh_collector','SQL','CONTAINS_SQL','NO','DEFINER','','','begin\n   call rds_set_gsh_collector(5);	   \n end','rdsadmin@localhost','2014-10-24 09:04:11','2014-10-24 09:04:11','','','latin1','latin1_swedish_ci','latin1_swedish_ci','begin\n   call rds_set_gsh_collector(5);	   \n end'),('mysql','rds_disable_gsh_collector','PROCEDURE','rds_disable_gsh_collector','SQL','CONTAINS_SQL','NO','DEFINER','','','begin\n  DECLARE sql_logging BOOLEAN;\n  select @@sql_log_bin into sql_logging;\n  set @@sql_log_bin=off;\n  alter event ev_rds_gsh_collector DISABLE;\n  select \'Collector Disabled\' as `Success`;\n  set @@sql_log_bin=sql_logging;\n end','rdsadmin@localhost','2014-10-24 09:04:11','2014-10-24 09:04:11','','','latin1','latin1_swedish_ci','latin1_swedish_ci','begin\n  DECLARE sql_logging BOOLEAN;\n  select @@sql_log_bin into sql_logging;\n  set @@sql_log_bin=off;\n  alter event ev_rds_gsh_collector DISABLE;\n  select \'Collector Disabled\' as `Success`;\n  set @@sql_log_bin=sql_logging;\n end'),('mysql','rds_external_master','PROCEDURE','rds_external_master','SQL','CONTAINS_SQL','NO','DEFINER',' phase varchar(10)','','BEGIN\nDECLARE v_rdsrepl INT;\nDECLARE v_mysql_version VARCHAR(20);\nDECLARE v_threads_running INT;\nDECLARE v_called_by_user VARCHAR(50);\nDECLARE v_sleep int;\nDECLARE v_rep_status int;\nDECLARE v_rep_status_stop int;\nDECLARE sql_logging BOOLEAN;\nselect @@sql_log_bin into sql_logging;\nSelect count(1) into v_rep_status_stop from mysql.rds_replication_status where action = \'stop slave\';\nSelect count(1) into v_rep_status from mysql.rds_replication_status;\nSelect user() into v_called_by_user;\nSelect version() into v_mysql_version;\nSelect count(1) into v_rdsrepl from mysql.rds_history where action = \'disable set master\' and master_user = \'rdsrepladmin\';\nSelect count(1) into v_threads_running FROM information_schema.processlist where user = \'system user\';\n\nIF v_called_by_user != \'rdsadmin@localhost\'\n  THEN\n  Select \'You do not have privileges to call this procedure\' as message;\nELSEIF v_rep_status = 0\nThen \n set @@sql_log_bin=off;\n insert into mysql.rds_replication_status(called_by_user, action, mysql_version)values (v_called_by_user,\'disable set master\',v_mysql_version);\n insert into mysql.rds_history(called_by_user, action, master_user, mysql_version)values (v_called_by_user,\'disable set master\',\'rdsrepladmin\',v_mysql_version);\n commit;\nELSEIF phase not in (\'enable\',\'disable\')\nthen\nselect \'please use the values enable or disable\' as message;\n \n\nElseIF v_rdsrepl > 0 and phase = \'disable\'\n  THEN\n   Select \'MYSQL.RDS_SET_EXTERNAL_MASTER is disabled\' as message;\n\nElseIF v_rdsrepl = 0 and phase = \'disable\'\n   THEN\n       if v_threads_running > 0\n         then\n             call mysql.rds_stop_replication();\n             select sleep(1) into v_sleep;\n             update mysql.rds_replication_status set called_by_user=v_called_by_user, action=\'disable set master\', mysql_version=v_mysql_version where action is not null;\n             commit;\n             select sleep(1) into v_sleep;\n             INSERT into mysql.rds_history(called_by_user, action, mysql_version, master_user) values (v_called_by_user,\'disable set master\', v_mysql_version, \'rdsrepladmin\');\n             commit;\n             select \'Replication has been stopped and MYSQL.RDS_SET_EXTERNAL_MASTER has been disabled\' as message;\n         else\n             update mysql.rds_replication_status set called_by_user=v_called_by_user, action=\'disable set master\', mysql_version=v_mysql_version where action is not null;\n             commit;\n             select sleep(1) into v_sleep;\n             INSERT into mysql.rds_history(called_by_user, action, mysql_version, master_user) values (v_called_by_user,\'disable set master\', v_mysql_version, \'rdsrepladmin\');\n             commit;\n             Select \'MYSQL.RDS_SET_EXTERNAL_MASTER has been disabled\' as message;\n         end if;\n\nELSEIF v_rdsrepl = 0 and phase = \'enable\'\n    THEN\n      if v_threads_running > 0\n         then\n            update mysql.rds_replication_status set called_by_user=v_called_by_user,action=\'enable set master\', mysql_version=v_mysql_version where action is not null;\n            commit;\n            select \'MYSQL.RDS_SET_EXTERNAL_MASTER is enabled.\' as message;\n      end if;\nELSEIF v_rdsrepl > 0 and phase = \'enable\'\n    THEN\n        update mysql.rds_replication_status set called_by_user=v_called_by_user,action=\'enable set master\', mysql_version=v_mysql_version where action is not null;\n        commit;\n        select sleep(1) into v_sleep;\n        UPDATE mysql.rds_history set action = \'enable set master\' where action = \'disable set master\' and master_user = \'rdsrepladmin\';\n        commit;\n        select \'MYSQL.RDS_SET_EXTERNAL_MASTER has been enabled\' as message;\nEND IF;\nIF v_rep_status_stop = 1\n  Then \n   update mysql.rds_replication_status set called_by_user=v_called_by_user,action=\'stop slave\', mysql_version=v_mysql_version where action is not null;\n   commit;\nEND IF;\nset @@sql_log_bin=sql_logging;\nEND','rdsadmin@localhost','2014-10-24 09:04:11','2014-10-24 09:04:11','','','latin1','latin1_swedish_ci','latin1_swedish_ci','BEGIN\nDECLARE v_rdsrepl INT;\nDECLARE v_mysql_version VARCHAR(20);\nDECLARE v_threads_running INT;\nDECLARE v_called_by_user VARCHAR(50);\nDECLARE v_sleep int;\nDECLARE v_rep_status int;\nDECLARE v_rep_status_stop int;\nDECLARE sql_logging BOOLEAN;\nselect @@sql_log_bin into sql_logging;\nSelect count(1) into v_rep_status_stop from mysql.rds_replication_status where action = \'stop slave\';\nSelect count(1) into v_rep_status from mysql.rds_replication_status;\nSelect user() into v_called_by_user;\nSelect version() into v_mysql_version;\nSelect count(1) into v_rdsrepl from mysql.rds_history where action = \'disable set master\' and master_user = \'rdsrepladmin\';\nSelect count(1) into v_threads_running FROM information_schema.processlist where user = \'system user\';\n\nIF v_called_by_user != \'rdsadmin@localhost\'\n  THEN\n  Select \'You do not have privileges to call this procedure\' as message;\nELSEIF v_rep_status = 0\nThen \n set @@sql_log_bin=off;\n insert into mysql.rds_replication_status(called_by_user, action, mysql_version)values (v_called_by_user,\'disable set master\',v_mysql_version);\n insert into mysql.rds_history(called_by_user, action, master_user, mysql_version)values (v_called_by_user,\'disable set master\',\'rdsrepladmin\',v_mysql_version);\n commit;\nELSEIF phase not in (\'enable\',\'disable\')\nthen\nselect \'please use the values enable or disable\' as message;\n \n\nElseIF v_rdsrepl > 0 and phase = \'disable\'\n  THEN\n   Select \'MYSQL.RDS_SET_EXTERNAL_MASTER is disabled\' as message;\n\nElseIF v_rdsrepl = 0 and phase = \'disable\'\n   THEN\n       if v_threads_running > 0\n         then\n             call mysql.rds_stop_replication();\n             select sleep(1) into v_sleep;\n             update mysql.rds_replication_status set called_by_user=v_called_by_user, action=\'disable set master\', mysql_version=v_mysql_version where action is not null;\n             commit;\n             select sleep(1) into v_sleep;\n             INSERT into mysql.rds_history(called_by_user, action, mysql_version, master_user) values (v_called_by_user,\'disable set master\', v_mysql_version, \'rdsrepladmin\');\n             commit;\n             select \'Replication has been stopped and MYSQL.RDS_SET_EXTERNAL_MASTER has been disabled\' as message;\n         else\n             update mysql.rds_replication_status set called_by_user=v_called_by_user, action=\'disable set master\', mysql_version=v_mysql_version where action is not null;\n             commit;\n             select sleep(1) into v_sleep;\n             INSERT into mysql.rds_history(called_by_user, action, mysql_version, master_user) values (v_called_by_user,\'disable set master\', v_mysql_version, \'rdsrepladmin\');\n             commit;\n             Select \'MYSQL.RDS_SET_EXTERNAL_MASTER has been disabled\' as message;\n         end if;\n\nELSEIF v_rdsrepl = 0 and phase = \'enable\'\n    THEN\n      if v_threads_running > 0\n         then\n            update mysql.rds_replication_status set called_by_user=v_called_by_user,action=\'enable set master\', mysql_version=v_mysql_version where action is not null;\n            commit;\n            select \'MYSQL.RDS_SET_EXTERNAL_MASTER is enabled.\' as message;\n      end if;\nELSEIF v_rdsrepl > 0 and phase = \'enable\'\n    THEN\n        update mysql.rds_replication_status set called_by_user=v_called_by_user,action=\'enable set master\', mysql_version=v_mysql_version where action is not null;\n        commit;\n        select sleep(1) into v_sleep;\n        UPDATE mysql.rds_history set action = \'enable set master\' where action = \'disable set master\' and master_user = \'rdsrepladmin\';\n        commit;\n        select \'MYSQL.RDS_SET_EXTERNAL_MASTER has been enabled\' as message;\nEND IF;\nIF v_rep_status_stop = 1\n  Then \n   update mysql.rds_replication_status set called_by_user=v_called_by_user,action=\'stop slave\', mysql_version=v_mysql_version where action is not null;\n   commit;\nEND IF;\nset @@sql_log_bin=sql_logging;\nEND'),('mysql','rds_set_external_master','PROCEDURE','rds_set_external_master','SQL','CONTAINS_SQL','NO','DEFINER','host VARCHAR(255),\nport INT,\nuser VARCHAR(16),\npasswd VARCHAR(256),\nname VARCHAR(50),\npos LONG ,\nenable_ssl_encryption BOOLEAN\n','','BEGIN\nDECLARE v_rdsrepl INT;\nDECLARE v_mysql_version VARCHAR(20);\nDECLARE v_called_by_user VARCHAR(50);\nDECLARE v_sleep int;\nDECLARE sql_logging BOOLEAN;\nselect @@sql_log_bin into sql_logging;\nSelect count(1) into v_rdsrepl from mysql.rds_history where action = \'disable set master\' and master_user = \'rdsrepladmin\';\nSelect user() into v_called_by_user;\nselect version() into v_mysql_version;\nIF v_rdsrepl > 0 and  v_called_by_user != \'rdsadmin@localhost\'\nTHEN\nset @@sql_log_bin=off;\nSelect \'RDS_SET_EXTERNAL_MASTER is disabled on this host.\' as Message;\nELSE\nSET @cmd = CONCAT(\'CHANGE MASTER TO \',\nCONCAT_WS(\', \',\nCONCAT(\'MASTER_HOST = \"\', trim(both from host), \'\"\'),\nCONCAT(\'MASTER_PORT = \', port),\nCONCAT(\'MASTER_USER = \"\', trim(both from user), \'\"\'),\nCONCAT(\'MASTER_PASSWORD = \"\', trim(both from passwd), \'\"\'),\nCONCAT(\'MASTER_LOG_FILE = \"\', trim(both from name), \'\"\'),\nCONCAT(\'MASTER_LOG_POS = \', pos),\nCONCAT(\'MASTER_SSL = \', enable_ssl_encryption)));\nPREPARE rds_set_master FROM @cmd;\nupdate mysql.rds_replication_status set called_by_user=v_called_by_user, action=\'set master\', mysql_version=v_mysql_version , master_host=trim(both from host), master_port=port where action is not null;\ncommit;\nEXECUTE rds_set_master;\nDEALLOCATE PREPARE rds_set_master;\nINSERT into mysql.rds_history(called_by_user, action, mysql_version, master_host, master_port, master_user, master_log_file, master_log_pos, master_ssl)\nvalues (v_called_by_user,\'set master\', v_mysql_version, trim(both from host), port, trim(both from user), trim(both from name), pos, enable_ssl_encryption);\ncommit;\n END IF;\nset @@sql_log_bin=sql_logging;\nEND','rdsadmin@localhost','2014-10-24 09:04:11','2014-10-24 09:04:11','','','latin1','latin1_swedish_ci','latin1_swedish_ci','BEGIN\nDECLARE v_rdsrepl INT;\nDECLARE v_mysql_version VARCHAR(20);\nDECLARE v_called_by_user VARCHAR(50);\nDECLARE v_sleep int;\nDECLARE sql_logging BOOLEAN;\nselect @@sql_log_bin into sql_logging;\nSelect count(1) into v_rdsrepl from mysql.rds_history where action = \'disable set master\' and master_user = \'rdsrepladmin\';\nSelect user() into v_called_by_user;\nselect version() into v_mysql_version;\nIF v_rdsrepl > 0 and  v_called_by_user != \'rdsadmin@localhost\'\nTHEN\nset @@sql_log_bin=off;\nSelect \'RDS_SET_EXTERNAL_MASTER is disabled on this host.\' as Message;\nELSE\nSET @cmd = CONCAT(\'CHANGE MASTER TO \',\nCONCAT_WS(\', \',\nCONCAT(\'MASTER_HOST = \"\', trim(both from host), \'\"\'),\nCONCAT(\'MASTER_PORT = \', port),\nCONCAT(\'MASTER_USER = \"\', trim(both from user), \'\"\'),\nCONCAT(\'MASTER_PASSWORD = \"\', trim(both from passwd), \'\"\'),\nCONCAT(\'MASTER_LOG_FILE = \"\', trim(both from name), \'\"\'),\nCONCAT(\'MASTER_LOG_POS = \', pos),\nCONCAT(\'MASTER_SSL = \', enable_ssl_encryption)));\nPREPARE rds_set_master FROM @cmd;\nupdate mysql.rds_replication_status set called_by_user=v_called_by_user, action=\'set master\', mysql_version=v_mysql_version , master_host=trim(both from host), master_port=port where action is not null;\ncommit;\nEXECUTE rds_set_master;\nDEALLOCATE PREPARE rds_set_master;\nINSERT into mysql.rds_history(called_by_user, action, mysql_version, master_host, master_port, master_user, master_log_file, master_log_pos, master_ssl)\nvalues (v_called_by_user,\'set master\', v_mysql_version, trim(both from host), port, trim(both from user), trim(both from name), pos, enable_ssl_encryption);\ncommit;\n END IF;\nset @@sql_log_bin=sql_logging;\nEND'),('mysql','rds_reset_external_master','PROCEDURE','rds_reset_external_master','SQL','CONTAINS_SQL','NO','DEFINER','','','BEGIN\nDECLARE v_rdsrepl INT;\nDECLARE v_mysql_version VARCHAR(20);\nDECLARE v_called_by_user VARCHAR(50);\nDECLARE v_sleep int;\nDECLARE v_threads_running INT;\nDECLARE sql_logging BOOLEAN;\nselect @@sql_log_bin into sql_logging;\nSelect count(1) into v_rdsrepl from mysql.rds_history where action = \'disable set master\' and master_user = \'rdsrepladmin\';\nSelect user() into v_called_by_user;\nselect version() into v_mysql_version;\nSELECT COUNT(1) into v_threads_running FROM information_schema.processlist WHERE user = \'system user\';\nIF  v_rdsrepl > 0 and  v_called_by_user != \'rdsadmin@localhost\'\nTHEN\n set @@sql_log_bin=off;\n Select \'Permission Denied: This instance is a RDS Read Replica.\' as Message;\nELSEIF v_threads_running = 0\n THEN\n     update mysql.rds_replication_status set called_by_user=v_called_by_user, action=\'reset slave\', mysql_version=v_mysql_version, master_host=NULL, master_port=NULL where action is not null;\n  commit;\n  RESET SLAVE ALL;\n  INSERT into mysql.rds_history(called_by_user, action, mysql_version) values (v_called_by_user,\'reset slave\', v_mysql_version);\n  commit;\n  Select \'Slave has been reset\' as message;\n ELSE  \n  call mysql.rds_stop_replication;\n  select sleep(1) into v_sleep;\n  update mysql.rds_replication_status set called_by_user=v_called_by_user, action=\'reset slave\', mysql_version=v_mysql_version, master_host=NULL, master_port=NULL where action is not null;\n  commit;\n  select sleep(1) into v_sleep;\n  RESET SLAVE ALL;\n  INSERT into mysql.rds_history(called_by_user, action, mysql_version) values (v_called_by_user,\'reset slave\', v_mysql_version);\n  commit;\n  Select \'Slave has been reset\' as message;\nEND IF;\nset @@sql_log_bin=sql_logging;\nEND','rdsadmin@localhost','2014-10-24 09:04:11','2014-10-24 09:04:11','','','latin1','latin1_swedish_ci','latin1_swedish_ci','BEGIN\nDECLARE v_rdsrepl INT;\nDECLARE v_mysql_version VARCHAR(20);\nDECLARE v_called_by_user VARCHAR(50);\nDECLARE v_sleep int;\nDECLARE v_threads_running INT;\nDECLARE sql_logging BOOLEAN;\nselect @@sql_log_bin into sql_logging;\nSelect count(1) into v_rdsrepl from mysql.rds_history where action = \'disable set master\' and master_user = \'rdsrepladmin\';\nSelect user() into v_called_by_user;\nselect version() into v_mysql_version;\nSELECT COUNT(1) into v_threads_running FROM information_schema.processlist WHERE user = \'system user\';\nIF  v_rdsrepl > 0 and  v_called_by_user != \'rdsadmin@localhost\'\nTHEN\n set @@sql_log_bin=off;\n Select \'Permission Denied: This instance is a RDS Read Replica.\' as Message;\nELSEIF v_threads_running = 0\n THEN\n     update mysql.rds_replication_status set called_by_user=v_called_by_user, action=\'reset slave\', mysql_version=v_mysql_version, master_host=NULL, master_port=NULL where action is not null;\n  commit;\n  RESET SLAVE ALL;\n  INSERT into mysql.rds_history(called_by_user, action, mysql_version) values (v_called_by_user,\'reset slave\', v_mysql_version);\n  commit;\n  Select \'Slave has been reset\' as message;\n ELSE  \n  call mysql.rds_stop_replication;\n  select sleep(1) into v_sleep;\n  update mysql.rds_replication_status set called_by_user=v_called_by_user, action=\'reset slave\', mysql_version=v_mysql_version, master_host=NULL, master_port=NULL where action is not null;\n  commit;\n  select sleep(1) into v_sleep;\n  RESET SLAVE ALL;\n  INSERT into mysql.rds_history(called_by_user, action, mysql_version) values (v_called_by_user,\'reset slave\', v_mysql_version);\n  commit;\n  Select \'Slave has been reset\' as message;\nEND IF;\nset @@sql_log_bin=sql_logging;\nEND'),('mysql','rds_start_replication','PROCEDURE','rds_start_replication','SQL','CONTAINS_SQL','NO','DEFINER','','','BEGIN\nDECLARE v_mysql_version VARCHAR(20);\nDECLARE v_threads_running INT;\nDECLARE v_called_by_user VARCHAR(50);\nDECLARE v_sleep int;\nDECLARE sql_logging BOOLEAN;\nselect @@sql_log_bin into sql_logging;\nSelect user() into v_called_by_user;\nSelect version() into v_mysql_version;\nSELECT COUNT(1) into v_threads_running FROM information_schema.processlist WHERE user = \'system user\';\n   if v_threads_running = 0\n      then\n       set @@sql_log_bin=off;\n       update mysql.rds_replication_status set called_by_user=v_called_by_user,action=\'start slave\', mysql_version=v_mysql_version where action is not null;\n       commit;\n       select sleep(1) into v_sleep;\n      START SLAVE;\n      SELECT COUNT(1) into v_threads_running FROM information_schema.processlist WHERE user = \'system user\';\n           if v_threads_running = 2 \n           then \n           insert into mysql.rds_history (called_by_user,action,mysql_version) values (v_called_by_user,\'start slave\', v_mysql_version);\n           commit;\n           Select \'Slave running normally.\' as Message;\n           else \n           Select \'Slave has encountered an error. Run SHOW SLAVE STATUS\\\\G; to see the error.\' as Message;\n           end if;\n      else\n      if v_threads_running = 2\n      then\n      Select \'Slave may already running. Call rds_stop_replication to stop replication;\' as Message;   \n      end if;\n  end if;\nset @@sql_log_bin=sql_logging;\nEND','rdsadmin@localhost','2014-10-24 09:04:11','2014-10-24 09:04:11','','','latin1','latin1_swedish_ci','latin1_swedish_ci','BEGIN\nDECLARE v_mysql_version VARCHAR(20);\nDECLARE v_threads_running INT;\nDECLARE v_called_by_user VARCHAR(50);\nDECLARE v_sleep int;\nDECLARE sql_logging BOOLEAN;\nselect @@sql_log_bin into sql_logging;\nSelect user() into v_called_by_user;\nSelect version() into v_mysql_version;\nSELECT COUNT(1) into v_threads_running FROM information_schema.processlist WHERE user = \'system user\';\n   if v_threads_running = 0\n      then\n       set @@sql_log_bin=off;\n       update mysql.rds_replication_status set called_by_user=v_called_by_user,action=\'start slave\', mysql_version=v_mysql_version where action is not null;\n       commit;\n       select sleep(1) into v_sleep;\n      START SLAVE;\n      SELECT COUNT(1) into v_threads_running FROM information_schema.processlist WHERE user = \'system user\';\n           if v_threads_running = 2 \n           then \n           insert into mysql.rds_history (called_by_user,action,mysql_version) values (v_called_by_user,\'start slave\', v_mysql_version);\n           commit;\n           Select \'Slave running normally.\' as Message;\n           else \n           Select \'Slave has encountered an error. Run SHOW SLAVE STATUS\\G; to see the error.\' as Message;\n           end if;\n      else\n      if v_threads_running = 2\n      then\n      Select \'Slave may already running. Call rds_stop_replication to stop replication;\' as Message;   \n      end if;\n  end if;\nset @@sql_log_bin=sql_logging;\nEND'),('mysql','rds_stop_replication','PROCEDURE','rds_stop_replication','SQL','CONTAINS_SQL','NO','DEFINER','','','BEGIN\nDECLARE v_mysql_version VARCHAR(20);\nDECLARE v_threads_running INT;\nDECLARE v_called_by_user VARCHAR(50);\nDECLARE v_sleep int;\nDECLARE sql_logging BOOLEAN;\nselect @@sql_log_bin into sql_logging;\nSelect user() into v_called_by_user;\nSelect version() into v_mysql_version;\nSELECT COUNT(1) into v_threads_running FROM information_schema.processlist WHERE user = \'system user\';\n    if v_threads_running > 0\n     then\n       set @@sql_log_bin=off;\n       update mysql.rds_replication_status set called_by_user=v_called_by_user,action=\'stop slave\', mysql_version=v_mysql_version where action is not null;\n       commit;\n       select sleep(1) into v_sleep;\n       STOP SLAVE;\n       SELECT COUNT(1) into v_threads_running FROM information_schema.processlist WHERE user = \'system user\';\n           if v_threads_running = 0\n           then\n           insert into mysql.rds_history (called_by_user,action,mysql_version) values (v_called_by_user,\'stop slave\',v_mysql_version);\n           commit;\n           Select \'Slave is down or disabled\' as Message;\n           else\n           Select \'Slave has encountered an error. Run SHOW SLAVE STATUS\\\\G; to see the error.\' as Message;\n           end if;\n      else\n     if v_threads_running < 1\n       then\n       Select \'Slave is already stopped or may not be configured. Run SHOW SLAVE STATUS\\\\G;\' as Message;\n       end if;\n end if;\nset @@sql_log_bin=sql_logging;\nEND','rdsadmin@localhost','2014-10-24 09:04:11','2014-10-24 09:04:11','','','latin1','latin1_swedish_ci','latin1_swedish_ci','BEGIN\nDECLARE v_mysql_version VARCHAR(20);\nDECLARE v_threads_running INT;\nDECLARE v_called_by_user VARCHAR(50);\nDECLARE v_sleep int;\nDECLARE sql_logging BOOLEAN;\nselect @@sql_log_bin into sql_logging;\nSelect user() into v_called_by_user;\nSelect version() into v_mysql_version;\nSELECT COUNT(1) into v_threads_running FROM information_schema.processlist WHERE user = \'system user\';\n    if v_threads_running > 0\n     then\n       set @@sql_log_bin=off;\n       update mysql.rds_replication_status set called_by_user=v_called_by_user,action=\'stop slave\', mysql_version=v_mysql_version where action is not null;\n       commit;\n       select sleep(1) into v_sleep;\n       STOP SLAVE;\n       SELECT COUNT(1) into v_threads_running FROM information_schema.processlist WHERE user = \'system user\';\n           if v_threads_running = 0\n           then\n           insert into mysql.rds_history (called_by_user,action,mysql_version) values (v_called_by_user,\'stop slave\',v_mysql_version);\n           commit;\n           Select \'Slave is down or disabled\' as Message;\n           else\n           Select \'Slave has encountered an error. Run SHOW SLAVE STATUS\\G; to see the error.\' as Message;\n           end if;\n      else\n     if v_threads_running < 1\n       then\n       Select \'Slave is already stopped or may not be configured. Run SHOW SLAVE STATUS\\G;\' as Message;\n       end if;\n end if;\nset @@sql_log_bin=sql_logging;\nEND'),('mysql','rds_next_master_log','PROCEDURE','rds_next_master_log','SQL','READS_SQL_DATA','YES','DEFINER','curr_master_log INT','','BEGIN\n  DECLARE v_threads_running INT;\n  DECLARE v_sleep INT;\n  DECLARE v_called_by_user VARCHAR(50);\n  DECLARE v_mysql_version VARCHAR(20);\n  DECLARE sql_logging BOOLEAN;\n  SELECT @@sql_log_bin into sql_logging;\n  SELECT user() into v_called_by_user;\n  SELECT version() into v_mysql_version;\n  SELECT COUNT(1) INTO v_threads_running FROM information_schema.processlist WHERE USER = \'system user\';\n  IF v_threads_running = 1 \n THEN\n    SET @cmd = CONCAT(\'CHANGE MASTER TO MASTER_LOG_FILE = \"\',\n    CONCAT(\'mysql-bin-changelog.\', LPAD(\'1\' + curr_master_log, 6, \'0\')), \'\",\n    MASTER_LOG_POS = 4\');\n    STOP SLAVE;\n    PREPARE rds_set_master FROM @cmd;\n    EXECUTE rds_set_master;\n    DEALLOCATE PREPARE rds_set_master;\n    START SLAVE;\n    SELECT \'Master Log Position has been set to start of next log\' AS Message;\n    SELECT sleep(2) INTO v_sleep;\n    SELECT COUNT(1) INTO v_threads_running FROM information_schema.processlist WHERE USER = \'system user\';\n    SET @@sql_log_bin=off;\n    IF v_threads_running = 2 THEN\n      SELECT \'Slave is running normally\' AS Message;\n      INSERT into mysql.rds_history(called_by_user, action, mysql_version, master_log_file, master_log_pos) values (v_called_by_user,\'next_master_log:OK\', v_mysql_version, CONCAT(\'mysql-bin-changelog.\', LPAD(\'1\' + curr_master_log, 6, \'0\')),4);\n      commit;\n    ELSE\n      SELECT \'Slave has encountered a new error. Please use SHOW SLAVE STATUS to see the error.\' AS Message;\n      INSERT into mysql.rds_history(called_by_user, action, mysql_version, master_log_file, master_log_pos) values (v_called_by_user,\'next_master_log:ERR\', v_mysql_version, CONCAT(\'mysql-bin-changelog.\', LPAD(\'1\' + curr_master_log, 6, \'0\')),4);\n      commit;\n    END IF;\n    SET @@sql_log_bin=sql_logging;\n  elseif v_threads_running = 2 \n  THEN\n     SELECT \'Slave is running normally.  No errors detected to skip.\' AS Message;\n  elseif v_threads_running = 0 \n  THEN\n     SELECT \'Slave is down or disabled.\' AS Message;\n  END IF;\nEND','rdsadmin@localhost','2014-10-24 09:04:11','2014-10-24 09:04:11','','','latin1','latin1_swedish_ci','latin1_swedish_ci','BEGIN\n  DECLARE v_threads_running INT;\n  DECLARE v_sleep INT;\n  DECLARE v_called_by_user VARCHAR(50);\n  DECLARE v_mysql_version VARCHAR(20);\n  DECLARE sql_logging BOOLEAN;\n  SELECT @@sql_log_bin into sql_logging;\n  SELECT user() into v_called_by_user;\n  SELECT version() into v_mysql_version;\n  SELECT COUNT(1) INTO v_threads_running FROM information_schema.processlist WHERE USER = \'system user\';\n  IF v_threads_running = 1 \n THEN\n    SET @cmd = CONCAT(\'CHANGE MASTER TO MASTER_LOG_FILE = \"\',\n    CONCAT(\'mysql-bin-changelog.\', LPAD(\'1\' + curr_master_log, 6, \'0\')), \'\",\n    MASTER_LOG_POS = 4\');\n    STOP SLAVE;\n    PREPARE rds_set_master FROM @cmd;\n    EXECUTE rds_set_master;\n    DEALLOCATE PREPARE rds_set_master;\n    START SLAVE;\n    SELECT \'Master Log Position has been set to start of next log\' AS Message;\n    SELECT sleep(2) INTO v_sleep;\n    SELECT COUNT(1) INTO v_threads_running FROM information_schema.processlist WHERE USER = \'system user\';\n    SET @@sql_log_bin=off;\n    IF v_threads_running = 2 THEN\n      SELECT \'Slave is running normally\' AS Message;\n      INSERT into mysql.rds_history(called_by_user, action, mysql_version, master_log_file, master_log_pos) values (v_called_by_user,\'next_master_log:OK\', v_mysql_version, CONCAT(\'mysql-bin-changelog.\', LPAD(\'1\' + curr_master_log, 6, \'0\')),4);\n      commit;\n    ELSE\n      SELECT \'Slave has encountered a new error. Please use SHOW SLAVE STATUS to see the error.\' AS Message;\n      INSERT into mysql.rds_history(called_by_user, action, mysql_version, master_log_file, master_log_pos) values (v_called_by_user,\'next_master_log:ERR\', v_mysql_version, CONCAT(\'mysql-bin-changelog.\', LPAD(\'1\' + curr_master_log, 6, \'0\')),4);\n      commit;\n    END IF;\n    SET @@sql_log_bin=sql_logging;\n  elseif v_threads_running = 2 \n  THEN\n     SELECT \'Slave is running normally.  No errors detected to skip.\' AS Message;\n  elseif v_threads_running = 0 \n  THEN\n     SELECT \'Slave is down or disabled.\' AS Message;\n  END IF;\nEND');
/*!40000 ALTER TABLE `proc` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`rdsadmin`@`localhost`*/ /*!50003 trigger block_proc_u before update on proc
for each row
BEGIN
DECLARE foo varchar(255);
if old.Definer = "rdsadmin@localhost" then
  select `ERROR (RDS): CANNOT MODIFY RDSDMIN OBJECT` into foo;
end if;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = '' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`rdsadmin`@`localhost`*/ /*!50003 trigger block_proc_d before delete on proc
for each row
BEGIN
DECLARE foo varchar(255);
if old.Definer = "rdsadmin@localhost" then
  select `ERROR (RDS): CANNOT DROP RDSDMIN OBJECT` into foo;
end if;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2015-09-13 14:55:21
